###########################################################################
#  Copyright 2021 DataRobot Inc. All Rights Reserved.                     #
#                                                                         #
#  This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES       #
#  OR CONDITIONS OF ANY KIND, express or implied.                         #
###########################################################################

AWSTemplateFormatVersion: "2010-09-09"
Description: DataRobot CloudFormation stack to create the EC2 instances for the cluster. (qs-1xxxxxxxx) 
Metadata:
  QuickStartDocumentation:
    EntrypointName: Launch into an existing VPC
    Order: "5"
  QSLint:
    Exclusions: [ W9002, W9003, W9006 ]
  cfn-lint:
    config:
      ignore_checks:
        - E9101
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network / Install Configurations
        Parameters:
          - VPCID
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - PublicSubnet1ID
          - PublicSubnet2ID
      - Label:
          default: Security Configuration
        Parameters:
          - KeyPairName
      - Label:
          default: DataRobot S3 Install Bucket
        Parameters:
          - DRS3InstallationBucket
          - DRS3CreateBucket
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - QSS3BucketRegion
    ParameterLabels:
      PublicSubnet1ID:
        default: Public subnet 1 ID
      PublicSubnet2ID:
        default: Public subnet 2 ID
      PrivateSubnet1ID:
        default: Private subnet 1 ID
      PrivateSubnet2ID:
        default: Private subnet 2 ID
      DRS3InstallationBucket:
        default: Bucket Name for DR Install S3 Bucket
      DRS3CreateBucket:
        default: Should Quickstart Create the bucket (select false if it already exists)
      VPCID:
        default: VPC ID  
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      QSS3BucketRegion:
        default: Quick Start S3 bucket Region
      KeyPairName:
        default: Key pair name
Parameters:
  PublicSubnet1ID:
    Type: "AWS::EC2::Subnet::Id"
    Description: ID of the public subnet in Availability Zone 1 of your existing VPC (e.g., subnet-a0246dcd).
  PublicSubnet2ID:
    Type: "AWS::EC2::Subnet::Id"
    Description: ID of the public subnet in Availability Zone 2 of your existing VPC (e.g., subnet-b1236eea).
  PrivateSubnet1ID:
    Type: "AWS::EC2::Subnet::Id"
    Description: ID of the private subnet in Availability Zone 1 of your existing VPC (e.g., subnet-fe9a8b32).
  PrivateSubnet2ID:
    Type: "AWS::EC2::Subnet::Id"
    Description: ID of the private subnet in Availability Zone 2 of your existing VPC (e.g., subnet-be8b01ea).
  VPCID:
    Type: "AWS::EC2::VPC::Id"
    Description: ID of your existing VPC (e.g., vpc-0343606e).
  KeyPairName:
    Description: Name of an existing public/private key pair. If you do not have one in this AWS Region,
      please create it before continuing.
    Type: 'AWS::EC2::KeyPair::KeyName'
  DRS3InstallationBucket:
    Default: weswagner-oregon-qs
    Description:
      Name of the S3 bucket you want to install DataRobot into. It should not be public
      and the account you are running the quickstart will need the ability to assign
      permissions for access to a role for EC2 instances.
    Type: String
  DRS3CreateBucket:
    Default: "False"
    AllowedValues:
      - "False"
      - "True"
    Description: Choose True if you did not already create a bucket and want it to be created by the quickstart
    Type: String
  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription:
      The Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a 
      hyphen (-).
    Default: aws-quickstart
    Description:
      Name of the S3 bucket for your copy of the Quick Start assets. 
      Keep the default name unless you are customizing the template. 
      Changing the name updates code references to point to a new Quick 
      Start location. This name can include numbers, lowercase letters, 
      uppercase letters, and hyphens, but do not start or end with a hyphen (-). 
      See https://aws-quickstart.github.io/option1.html.
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    Type: String
    ConstraintDescription:
      The Quick Start S3 key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slashes (/). The prefix should
      end with a forward slash (/).
    Default: quickstart-data-robot-automl-platform/
    Description:
      S3 key prefix that is used to simulate a directory for your copy of the 
      Quick Start assets. Keep the default prefix unless you are customizing 
      the template. Changing this prefix updates code references to point to 
      a new Quick Start location. This prefix can include numbers, lowercase 
      letters, uppercase letters, hyphens (-), and forward slashes (/). End with 
      a forward slash. See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html 
      and https://aws-quickstart.github.io/option1.html.
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'AWS Region where the Quick Start S3 bucket (QSS3BucketName) is 
      hosted. Keep the default Region unless you are customizing the template. 
      Changing this Region updates code references to point to a new Quick Start location. 
      When using your own bucket, specify the Region. 
      See https://aws-quickstart.github.io/option1.html.'
    Type: String

Conditions:
  CreateS3BucketCondition: !Equals 
    - !Ref DRS3CreateBucket
    - "True"    
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']

# Use Centos 8.2.2004 as most stable version for Data Robot 7.0.2
Mappings: 
  RegionMap: 
    us-east-1: 
      "Centos": "ami-01ca03df4a6012157"
    us-east-2: 
      "Centos": "ami-000e7ce4dd68e7a11"
    us-west-1:
      "Centos": "ami-04179d30492b778ad"
    us-west-2:
      "Centos": "ami-0157b1e4eefd91fd7"
    eu-west-1:
      "Centos": "ami-0bfa4fefe067b7946"
    eu-west-2:
      "Centos": "ami-0eee2548cd75b4877"
    eu-west-3:
      "Centos": "ami-05786aa5add3ca7c8"
    eu-south-1:
      "Centos": "ami-00fd0c9036a37a48e"   
    eu-north-1:
      "Centos": "ami-0474ce84d449ee66f"
    sa-east-1:
      "Centos": "ami-005c6439e527f2704"
    ap-northeast-1:
      "Centos": "ami-089a156ea4f52a0a3"
    ap-northeast-2:
      "Centos": "ami-09cdc4034bbb65412"
    

Resources:

  AMIWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  AMIWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    Properties:
      Handle: !Ref AMIWaitHandle
      Timeout: '6000'
      Count: 1

  CreateModelAutoscale:
    Type: AWS::CloudFormation::Stack
    DependsOn: AMIWaitCondition
    Properties:
      TemplateURL: https://weswagner-quickstart-dr.s3.amazonaws.com/quickstart-data-robot-automl-platform/templates/datarobot-autoscale-template.yaml
      #TemplateURL: !Sub
      #  - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/datarobot-autoscale-template.yaml'
      #  - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
      #    S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      TimeoutInMinutes: 120
      Parameters:
        PrivateSubnet1ID: !Ref PrivateSubnet1ID
        PrivateSubnet2ID: !Ref PrivateSubnet2ID
        MaxModelingNodes: 5
        MainStack: !Ref AWS::StackName
        KeyPairName: !Ref KeyPairName
        IamArn: !GetAtt 'IAMStack.Outputs.EC2InstanceSecurityProfileARN'
        EC2SecurityGroup: !GetAtt 'SecurityStack.Outputs.EC2SecurityGroupId'
        
      
  S3Bucket:
    Type: AWS::S3::Bucket
    Condition: CreateS3BucketCondition
    Properties:
      AccessControl: Private
      BucketName: !Ref DRS3InstallationBucket

  SecurityStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TimeoutInMinutes: 10
      TemplateURL: https://weswagner-quickstart-dr.s3.amazonaws.com/quickstart-data-robot-automl-platform/templates/datarobot-securitygroup-template.yaml
      Parameters:
        MainStack: !Ref AWS::StackName
        VpcId: !Ref VPCID
        CidrBlock: 0.0.0.0/0


  IAMStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TimeoutInMinutes: 15
      TemplateURL: https://weswagner-quickstart-dr.s3.amazonaws.com/quickstart-data-robot-automl-platform/templates/datarobot-iam-template.yaml
      Parameters:
        MainStack: !Ref AWS::StackName
        S3Bucket: !Ref DRS3InstallationBucket
        

  AppNode:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://weswagner-quickstart-dr.s3.amazonaws.com/quickstart-data-robot-automl-platform/templates/datarobot-appnode-template.yaml
      TimeoutInMinutes: 120
      Parameters:
        InstanceType: r5.xlarge
        Region: !Ref "AWS::Region"
        MainStack: !Ref AWS::StackName
        SubnetId: !Ref PrivateSubnet1ID
        LBPublicSubnet1ID: !Ref PublicSubnet1ID
        LBPublicSubnet2ID: !Ref PublicSubnet2ID
        LBVPCID: !Ref VPCID
        Encrypted: false
        EncryptionKey: ' '
        SSHKey: !Ref KeyPairName
        QSInstallationBucket: weswagner-quickstart-dr
        DRInstallationBucket: !Ref DRS3InstallationBucket
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", Centos]
        DownloadURL: "https://datarobot-enterprise-releases.s3.amazonaws.com/promoted/7.0.2/dockerized/DataRobot-RELEASE-7.0.2.tar.gz?AWSAccessKeyId=AKIAQ6I23A22NIXIMKVW&Expires=1623696772&Signature=XiZexQeWjCwtw%2Fru4XUIFkoHE94%3D"
        EC2InstanceSecurityProfile: !GetAtt 'IAMStack.Outputs.EC2InstanceSecurityProfile'
        EC2SecurityGroup: !GetAtt 'SecurityStack.Outputs.EC2SecurityGroupId'
        PredictionName: !GetAtt 'PredictionLoadBalancer.DNSName'
        UseAutoScaling: "true"
        MetricNamespace: "DataRobot/AutoScaling/Quickstart"
        ClusterType: "QuickStart"  
        StorageType: "s3bucket" 
        # Defaults
        DRVersion: '7.0.2'
        NodeVolumeSize: 60
        DataVolumeSize: 200
        PublicIpAddress: false
        LogServer: off
        SecretsEnforced: true
        BackupDir: "backup_files"
        StorageDir: "datarobot_storage"
        UseS3BucketBackups: true
        S3BucketBackupSchedule: "0 0 * * 1-5"

      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-AppNode
        - Key: MainStack
          Value: !Ref AWS::StackName
        - Key: NodeType
          Value: DataRobot


  DedicatedPredictionServerStack1:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: https://weswagner-quickstart-dr.s3.amazonaws.com/quickstart-data-robot-automl-platform/templates/datarobot-node-template.yaml
      Parameters:
        Region: !Ref "AWS::Region"
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", Centos]
        InstallationBucket: !Ref DRS3InstallationBucket
        InstanceType: r5.xlarge
        MainStack: !Ref AWS::StackName
        ServerName: DedicatedPredictionServer1
        SSHKey: !Ref KeyPairName
        SubnetId: !Ref PrivateSubnet1ID
        Encrypted: false
        EncryptionKey: ' '
        AmiSignalHandle: ' '
        EC2InstanceSecurityProfile: !GetAtt 'IAMStack.Outputs.EC2InstanceSecurityProfile'
        EC2SecurityGroup: !GetAtt 'SecurityStack.Outputs.EC2SecurityGroupId'
        # Defaults
        DRVersion: '7.0.2'
        NodeVolumeSize: 60
        DataVolumeSize: 100
        PublicIpAddress: false
        LogServer: off
        BackupDir: "backup_files"
        StorageDir: "datarobot_storage"
        UseS3BucketBackups: true
        S3BucketBackupSchedule: "0 0 * * 1-5"
        TagDataVol: false
      Tags:
        # DataRobot tags
        - Key: Name
          Value: !Sub ${AWS::StackName}-DedicatedPredictionServer1
        - Key: MainStack
          Value: !Ref AWS::StackName
        - Key: NodeType
          Value: DataRobot

  DedicatedPredictionServerStack2:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: https://weswagner-quickstart-dr.s3.amazonaws.com/quickstart-data-robot-automl-platform/templates/datarobot-node-template.yaml
      Parameters:
        Region: !Ref "AWS::Region"
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", Centos]
        InstallationBucket: !Ref DRS3InstallationBucket
        InstanceType: r5.xlarge
        MainStack: !Ref AWS::StackName
        ServerName: DedicatedPredictionServer2
        SSHKey: !Ref KeyPairName
        SubnetId: !Ref PrivateSubnet2ID
        Encrypted: false
        EncryptionKey: ' '
        AmiSignalHandle: ' '
        EC2InstanceSecurityProfile: !GetAtt 'IAMStack.Outputs.EC2InstanceSecurityProfile'
        EC2SecurityGroup: !GetAtt 'SecurityStack.Outputs.EC2SecurityGroupId'
        # Defaults
        DRVersion: '7.0.2'
        NodeVolumeSize: 60
        DataVolumeSize: 100
        PublicIpAddress: false
        LogServer: off
        BackupDir: "backup_files"
        StorageDir: "datarobot_storage"
        UseS3BucketBackups: true
        S3BucketBackupSchedule: "0 0 * * 1-5"
        TagDataVol: false    
      Tags:
        # DataRobot tags
        - Key: Name
          Value: !Sub ${AWS::StackName}-DedicatedPredictionServer2
        - Key: MainStack
          Value: !Ref AWS::StackName
        - Key: NodeType
          Value: DataRobot

  ModelManagementStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: https://weswagner-quickstart-dr.s3.amazonaws.com/quickstart-data-robot-automl-platform/templates/datarobot-node-template.yaml
      Parameters:
        Region: !Ref "AWS::Region"
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", Centos]
        InstallationBucket: !Ref DRS3InstallationBucket
        InstanceType: r5.xlarge
        MainStack: !Ref AWS::StackName
        ServerName: ModelManagement
        SSHKey: !Ref KeyPairName
        SubnetId: !Ref PrivateSubnet1ID
        Encrypted: false
        EncryptionKey: ' '
        AmiSignalHandle: ' '
        EC2InstanceSecurityProfile: !GetAtt 'IAMStack.Outputs.EC2InstanceSecurityProfile'
        EC2SecurityGroup: !GetAtt 'SecurityStack.Outputs.EC2SecurityGroupId'
        # Defaults
        DRVersion: '7.0.2'
        NodeVolumeSize: 60
        DataVolumeSize: 100
        PublicIpAddress: false
        LogServer: off
        BackupDir: "backup_files"
        StorageDir: "datarobot_storage"
        UseS3BucketBackups: true
        S3BucketBackupSchedule: "0 0 * * 1-5"
        TagDataVol: false  
      Tags:
        # DataRobot tags
        - Key: Name
          Value: !Sub ${AWS::StackName}-ModelManagement
        - Key: MainStack
          Value: !Ref AWS::StackName
        - Key: NodeType
          Value: DataRobot


# Configured for 4 workers each, total of 8
  ModelingNode1Stack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: https://weswagner-quickstart-dr.s3.amazonaws.com/quickstart-data-robot-automl-platform/templates/datarobot-node-template.yaml
      Parameters:
        Region: !Ref "AWS::Region"
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", Centos]
        InstallationBucket: !Ref DRS3InstallationBucket
        InstanceType: r5.xlarge
        MainStack: !Ref AWS::StackName
        ServerName: ModelingNode1
        SSHKey: !Ref KeyPairName
        SubnetId: !Ref PrivateSubnet1ID
        Encrypted: false
        EncryptionKey: ' '
        AmiSignalHandle: ' '
        EC2InstanceSecurityProfile: !GetAtt 'IAMStack.Outputs.EC2InstanceSecurityProfile'
        EC2SecurityGroup: !GetAtt 'SecurityStack.Outputs.EC2SecurityGroupId'
        # Defaults
        DRVersion: '7.0.2'
        NodeVolumeSize: 60
        DataVolumeSize: 100
        PublicIpAddress: false
        LogServer: off
        BackupDir: "backup_files"
        StorageDir: "datarobot_storage"
        UseS3BucketBackups: true
        S3BucketBackupSchedule: "0 0 * * 1-5"
        TagDataVol: false  
      Tags:
        # DataRobot tags
        - Key: Name
          Value: !Sub ${AWS::StackName}-ModelingNode1
        - Key: MainStack
          Value: !Ref AWS::StackName
        - Key: NodeType
          Value: DataRobot


  ModelingNode2Stack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: https://weswagner-quickstart-dr.s3.amazonaws.com/quickstart-data-robot-automl-platform/templates/datarobot-node-template.yaml
      Parameters:
        Region: !Ref "AWS::Region"
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", Centos]
        InstallationBucket: !Ref DRS3InstallationBucket
        InstanceType: r5.xlarge
        MainStack: !Ref AWS::StackName
        ServerName: ModelingNode2
        SSHKey: !Ref KeyPairName
        SubnetId: !Ref PrivateSubnet2ID
        Encrypted: false
        EncryptionKey: ' '
        AmiSignalHandle: ' '
        EC2InstanceSecurityProfile: !GetAtt 'IAMStack.Outputs.EC2InstanceSecurityProfile'
        EC2SecurityGroup: !GetAtt 'SecurityStack.Outputs.EC2SecurityGroupId'
        # Defaults
        DRVersion: '7.0.2'
        NodeVolumeSize: 60
        DataVolumeSize: 100
        PublicIpAddress: false
        LogServer: off
        BackupDir: "backup_files"
        StorageDir: "datarobot_storage"
        UseS3BucketBackups: true
        S3BucketBackupSchedule: "0 0 * * 1-5"
        TagDataVol: false  
      Tags:
        # DataRobot tags
        - Key: Name
          Value: !Sub ${AWS::StackName}-ModelingNode2
        - Key: MainStack
          Value: !Ref AWS::StackName
        - Key: NodeType
          Value: DataRobot


# Added to allow for AutoScaling
  ModelingOnlyNodeStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: https://weswagner-quickstart-dr.s3.amazonaws.com/quickstart-data-robot-automl-platform/templates/datarobot-node-template.yaml
      Parameters:
        Region: !Ref "AWS::Region"
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", Centos]
        InstallationBucket: !Ref DRS3InstallationBucket
        InstanceType: r5.2xlarge
        MainStack: !Ref AWS::StackName
        ServerName: ModelingOnly
        SSHKey: !Ref KeyPairName
        SubnetId: !Ref PrivateSubnet1ID
        Encrypted: false
        EncryptionKey: ' '
        AmiSignalHandle: !Join
          - ''
          - - !Ref AMIWaitHandle
        EC2InstanceSecurityProfile: !GetAtt 'IAMStack.Outputs.EC2InstanceSecurityProfile'
        EC2SecurityGroup: !GetAtt 'SecurityStack.Outputs.EC2SecurityGroupId'
        # Defaults
        DRVersion: '7.0.2'
        NodeVolumeSize: 60
        DataVolumeSize: 100
        PublicIpAddress: false
        LogServer: off
        BackupDir: "backup_files"
        StorageDir: "datarobot_storage"
        UseS3BucketBackups: true
        S3BucketBackupSchedule: "0 0 * * 1-5"
        TagDataVol: false   
      Tags:
        # DataRobot tags
        - Key: Name
          Value: !Sub ${AWS::StackName}-ModelingOnlyNode
        - Key: MainStack
          Value: !Ref AWS::StackName
        - Key: NodeType
          Value: DataRobot  

  DataNodeStack1:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: https://weswagner-quickstart-dr.s3.amazonaws.com/quickstart-data-robot-automl-platform/templates/datarobot-node-template.yaml
      Parameters:
        Region: !Ref "AWS::Region"
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", Centos]
        InstallationBucket: !Ref DRS3InstallationBucket
        InstanceType: r5.large
        MainStack: !Ref AWS::StackName
        ServerName: DataNode1
        SSHKey: !Ref KeyPairName
        SubnetId: !Ref PrivateSubnet1ID
        Encrypted: false
        EncryptionKey: ' '
        AmiSignalHandle: !Ref AMIWaitHandle
        EC2InstanceSecurityProfile: !GetAtt 'IAMStack.Outputs.EC2InstanceSecurityProfile'
        EC2SecurityGroup: !GetAtt 'SecurityStack.Outputs.EC2SecurityGroupId'
        # Defaults
        DRVersion: '7.0.2'
        NodeVolumeSize: 60
        DataVolumeSize: 100
        PublicIpAddress: false
        LogServer: off
        BackupDir: "backup_files"
        StorageDir: "datarobot_storage"
        UseS3BucketBackups: true
        S3BucketBackupSchedule: "0 0 * * 1-5"
        TagDataVol: false  
      Tags:
        # DataRobot tags
        - Key: Name
          Value: !Sub ${AWS::StackName}-DataNode1
        - Key: MainStack
          Value: !Ref AWS::StackName
        - Key: NodeType
          Value: DataRobot  

  DataNodeStack2:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: https://weswagner-quickstart-dr.s3.amazonaws.com/quickstart-data-robot-automl-platform/templates/datarobot-node-template.yaml
      Parameters:
        Region: !Ref "AWS::Region"
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", Centos]
        InstallationBucket: !Ref DRS3InstallationBucket
        InstanceType: r5.large
        MainStack: !Ref AWS::StackName
        ServerName: DataNode2
        SSHKey: !Ref KeyPairName
        SubnetId: !Ref PrivateSubnet2ID
        Encrypted: false
        EncryptionKey: ' '
        AmiSignalHandle: !Ref AMIWaitHandle
        EC2InstanceSecurityProfile: !GetAtt 'IAMStack.Outputs.EC2InstanceSecurityProfile'
        EC2SecurityGroup: !GetAtt 'SecurityStack.Outputs.EC2SecurityGroupId'
        # Defaults
        DRVersion: '7.0.2'
        NodeVolumeSize: 60
        DataVolumeSize: 100
        PublicIpAddress: false
        LogServer: off
        BackupDir: "backup_files"
        StorageDir: "datarobot_storage"
        UseS3BucketBackups: true
        S3BucketBackupSchedule: "0 0 * * 1-5"
        TagDataVol: false  
      Tags:
        # DataRobot tags
        - Key: Name
          Value: !Sub ${AWS::StackName}-DataNode2
        - Key: MainStack
          Value: !Ref AWS::StackName
        - Key: NodeType
          Value: DataRobot  

  DataNodeStack3:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: https://weswagner-quickstart-dr.s3.amazonaws.com/quickstart-data-robot-automl-platform/templates/datarobot-node-template.yaml
      Parameters:
        Region: !Ref "AWS::Region"
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", Centos]
        InstallationBucket: !Ref DRS3InstallationBucket
        InstanceType: r5.large
        MainStack: !Ref AWS::StackName
        ServerName: DataNode3
        SSHKey: !Ref KeyPairName
        SubnetId: !Ref PrivateSubnet1ID
        Encrypted: false
        EncryptionKey: ' '
        AmiSignalHandle: !Ref AMIWaitHandle
        EC2InstanceSecurityProfile: !GetAtt 'IAMStack.Outputs.EC2InstanceSecurityProfile'
        EC2SecurityGroup: !GetAtt 'SecurityStack.Outputs.EC2SecurityGroupId'
        # Defaults
        DRVersion: '7.0.2'
        NodeVolumeSize: 60
        DataVolumeSize: 100
        PublicIpAddress: false
        LogServer: off
        BackupDir: "backup_files"
        StorageDir: "datarobot_storage"
        UseS3BucketBackups: true
        S3BucketBackupSchedule: "0 0 * * 1-5"
        TagDataVol: false  
      Tags:
        # DataRobot tags
        - Key: Name
          Value: !Sub ${AWS::StackName}-DataNode3
        - Key: MainStack
          Value: !Ref AWS::StackName
        - Key: NodeType
          Value: DataRobot

##### Load Balancer for Dedicated Predicion Servers
  PredictionLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Subnets:
        - Ref: PublicSubnet1ID
        - Ref: PublicSubnet2ID
      Type: network
  PredictionTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPort: '80'
      HealthCheckProtocol: HTTP
      Port: 80
      Protocol: TCP
      VpcId: !Ref VPCID
      TargetType: instance
      Targets:
        - Id: !GetAtt 'DedicatedPredictionServerStack1.Outputs.InstanceId'
          Port: 80        
        - Id: !GetAtt 'DedicatedPredictionServerStack2.Outputs.InstanceId'
          Port: 80
  LBListenerHTTP:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: PredictionTargetGroup
      LoadBalancerArn:
        Ref: PredictionLoadBalancer
      Port: 80
      Protocol: TCP
  

Outputs:
  MasterTemplate:
    Description: Master Template Complete
    Value: MasterTemplate





    
    